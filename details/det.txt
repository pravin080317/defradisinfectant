Approach:

Store Welsh translations centrally in a Dataverse table (one row per content block, keyed by ContentID).

English content remains static on the page. Welsh is loaded from Dataverse only if Welsh is selected.

Implementation in Power Pages:

Assign unique ContentIDs to every translatable block (header, section, button, etc.).

Use Liquid to query Dataverse for all Welsh content for the current page (single optimized query).

On language switch, dynamically display Welsh text by matching ContentID.

Missing translations fall back to English automatically.

Pros (for LA Portal):

Centralized Welsh content managementâ€”easy updates, auditing, and future expansion.

Minimal page changes: English loads instantly, only one Dataverse fetch per page for Welsh.

Reduces content drift: all Welsh content is managed in one Dataverse table.

Supports future language additions with the same model.

Allows content editors and translators to update Welsh independently (with simple UI).

Cons (for LA Portal):

Requires initial developer effort: add ContentIDs, set up Liquid/JS logic, and design Dataverse schema.

Slightly increased page load time in Welsh mode due to data fetch (usually negligible if optimized).

Reliance on Dataverse availability for Welsh rendering.

Editors must manage ContentIDs and Dataverse records accurately.
