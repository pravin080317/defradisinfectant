let logins = customEvents
| where name == "LAPortalLogin"
| extend
    userId = tostring(customDimensions.userId),
    userName = tostring(customDimensions.userName),
    userCouncil = tostring(customDimensions.userCouncil),
    loginTime = todatetime(customDimensions.loginTime),
    sessionId = tostring(customDimensions.sessionId)
| project 
    timestamp, eventType = "Login", userId, userName, userCouncil, loginTime, sessionId, councilId = userCouncil, councilName = userCouncil, switchTime = loginTime;

let switches = customEvents
| where name == "CouncilSwitched"
| extend
    userId = tostring(customDimensions.userId),
    userName = tostring(customDimensions.userName),
    previousCouncilId = tostring(customDimensions.previousCouncilId),
    newCouncilId = tostring(customDimensions.newCouncilId),
    newCouncilName = tostring(customDimensions.newCouncilName),
    switchTime = todatetime(customDimensions.switchTime),
    sessionId = tostring(customDimensions.sessionId)
| project 
    timestamp, eventType = "CouncilSwitch", userId, userName, councilId = newCouncilId, councilName = newCouncilName, switchTime, sessionId;

let allEvents = union logins, switches
| order by userId, sessionId, switchTime asc;

allEvents
| summarize 
    councilsVisited = make_list(councilName), 
    councilIds = make_list(councilId),
    firstLogin = minif(switchTime, eventType == "Login"),
    switches = countif(eventType == "CouncilSwitch"),
    sessions = dcount(sessionId)
    by userId, userName
| where array_length(councilIds) > 1
| order by firstLogin desc
