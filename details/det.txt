Great — let’s start with **Workbook 1: Page Load Performance**.

---

### 📘 Workbook Name:

**“LA Portal – Page Load Performance”**

---

### 🔧 Sections / Subtitles to Include:

| **Section Title**                  | **Purpose**                                            | **Chart Type**      | **Query Summary**                              |
| ---------------------------------- | ------------------------------------------------------ | ------------------- | ---------------------------------------------- |
| 🔹 **Average Page Load Time**      | Overall average load duration across pages             | Line Chart          | Duration trends over time per page             |
| 🔹 **Slowest Pages**               | Identify slowest-loading pages by average duration     | Bar Chart           | Top 10 pages by highest average load time      |
| 🔹 **Page Load by Browser**        | Compare load performance across browsers               | Column or Pie Chart | Browser-based load time analysis               |
| 🔹 **Page Load by Council**        | Load experience differences by user council (BAC code) | Bar Chart           | Group by custom dimension `userCouncil`        |
| 🔹 **Spike Detection (Load > 5s)** | Highlight any spikes in load time > 5s                 | Line Chart or Table | Visualize spikes grouped by page and timestamp |

---

### ✅ KQL Queries for Each Section

#### **1. Average Page Load Time**

```kql
pageViews
| extend pageName = name
| summarize avgDuration = avg(duration) by pageName, bin(timestamp, 5m)
| order by timestamp asc
```

#### **2. Slowest Pages**

```kql
pageViews
| summarize avgDuration = avg(duration), count_ = count() by name
| top 10 by avgDuration desc
```

#### **3. Page Load by Browser**

```kql
pageViews
| summarize avgDuration = avg(duration), count_ = count() by client_Browser
| order by avgDuration desc
```

#### **4. Page Load by Council**

```kql
pageViews
| extend userCouncil = tostring(customDimensions.userCouncil)
| where userCouncil != ""
| summarize avgDuration = avg(duration) by userCouncil
| order by avgDuration desc
```

#### **5. Page Load Spikes (duration > 5s)**

```kql
pageViews
| where duration > 5000
| summarize spikeCount = count() by name, bin(timestamp, 5m)
| order by timestamp desc
```

---

### 📊 Chart Settings Example (for Avg Load Time)

| **Setting**     | **Value**                          |
| --------------- | ---------------------------------- |
| Chart Type      | **Line Chart**                     |
| X-axis Column   | `timestamp`                        |
| Y-axis Column   | `avgDuration`                      |
| Series Grouping | `pageName`                         |
| Title           | **Average Page Load Time by Page** |
| Threshold Line  | Optional (e.g., 5000ms)            |

---

Would you like me to walk you through setting this in the Azure Workbook UI or generate the workbook JSON to import directly?
