This feature enforces role-based access within the SVT custom canvas app, allowing only authorised users—Team Managers, Caseworkers, and optionally QA Reviewers—to access relevant sections of the app and perform actions based on their privileges. It ensures data security, workflow governance, and auditability for all interactions.

Solution Summary
Dataverse security roles will be configured for Team Manager, Caseworker, and (optional) QA Reviewer.

The SVT canvas app will check the user’s role at runtime (using User().Email or Dataverse profile) to control:

Navigation access (which screens can be opened).

Button/control visibility (e.g. Reassign, QA Mark).

Edit privileges on fields (e.g. decision logging).

Audit logs will be captured for all user interactions in Dataverse (e.g. task reassignment, outcome submission).

Team Managers will be able to:

View all jobs/tasks.

Assign tasks (individually/bulk) to Caseworkers.

Override case details or escalate.

Caseworkers will only:

View/edit tasks assigned to them.

See all sales records but act only on assigned ones.

QA Reviewers (if introduced) will have read-only access with the ability to pass/fail outcomes.


To-Be Components
Component Type	Description
Dataverse Security Roles	SVT Manager, SVT Caseworker, (SVT QA Reviewer)
Canvas App Logic	Conditional visibility and logic via Power Fx based on user’s role
Audit Table (Dataverse)	Logs each user action (assignments, outcomes, overrides)
Model-Driven Navigation	Role-based sitemap: SVT Canvas page visible only to SVT roles
Custom APIs (Dataverse)	Assignment and override actions audited via plugins
System Jobs/Flows	Power Automate or plugin to stamp audit info (user, role, timestamp)

Assumptions
Only 3 personas are in scope: Team Manager, Caseworker, and QA Reviewer (optional).

User Role info will be available in Dataverse systemuser table or from AAD claims.

Audit logging is enabled at platform level or implemented via plugins.

Role-based logic in the Canvas App is enforced using Power Fx expressions.

Caseworkers are allowed to see all jobs but only interact with their assigned ones.

Dependencies
AAD Role mapping or Dynamics user team mapping (for persona detection).

Dataverse security roles provisioned per persona and assigned in Environments.

Custom logic in canvas app to interpret and apply role-based control.

Audit plugin or logging mechanism enabled for write operations (assignment, decision).

Power Automate or Plugin logic to validate permissions before executing API actions.
