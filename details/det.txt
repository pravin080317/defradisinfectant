function sortTable(n, isDate) {
  // ─── 1) RESET *ALL* HEADER BUTTONS TO “NOT SORTED” ─────────────────
  document
    .querySelectorAll('.govuk-table__header button')
    .forEach(btn => {
      const col = btn.textContent.trim();
      btn.setAttribute('aria-sort', 'none');
      btn.setAttribute(
        'aria-label',
        `${col}, not sorted. Activate to sort ascending.`
      );
    });

  // ─── 2) FETCH TABLE & ROWS ─────────────────────────────────────────
  const table = document.getElementById('{{tableid}}');
  const rows  = Array.from(table.tBodies[0].rows);

  // ─── 3) BUBBLE-SORT LOOP ───────────────────────────────────────────
  let switching   = true;
  let dir         = 'asc';
  let switchCount = 0;

  while (switching) {
    switching = false;

    for (let i = 0; i < rows.length - 1; i++) {
      let x = rows[i].getElementsByTagName('td')[n][0] || rows[i].getElementsByTagName('td')[n];
      let y = rows[i+1].getElementsByTagName('td')[n][0] || rows[i+1].getElementsByTagName('td')[n];
      let shouldSwitch = false;

      // Compare text or dates
      if (dir === 'asc') {
        const a = isDate ? new Date(x.innerText) : x.innerText.toLowerCase();
        const b = isDate ? new Date(y.innerText) : y.innerText.toLowerCase();
        if (a > b) shouldSwitch = true;
      } else {
        const a = isDate ? new Date(x.innerText) : x.innerText.toLowerCase();
        const b = isDate ? new Date(y.innerText) : y.innerText.toLowerCase();
        if (a < b) shouldSwitch = true;
      }

      if (shouldSwitch) {
        rows[i].parentNode.insertBefore(rows[i+1], rows[i]);
        switching   = true;
        switchCount++;
        break;
      }
    }

    // If we made no switches in ascending mode, try descending once
    if (!switching && switchCount === 0 && dir === 'asc') {
      dir = 'desc';
      switching = true;
    }
    // Otherwise exit the loop
  }

  // ─── 4) UPDATE THE CLICKED HEADER’S aria-sort & aria-label ─────────
  const headerBtn = table
    .querySelectorAll('.govuk-table__header button')[n];
  const colName   = headerBtn.textContent.trim();

  headerBtn.setAttribute(
    'aria-sort',
    dir === 'asc' ? 'ascending' : 'descending'
  );

  headerBtn.setAttribute(
    'aria-label',
    dir === 'asc'
      ? `${colName}, sorted ascending. Activate to sort descending.`
      : `${colName}, sorted descending. Activate to sort ascending.`
  );

  // ─── 5) (optional) refresh pagination / re-render page … ────────────
  // currentPage = 1;
  // displayTable();
  // generatePagination();
}
