function sortTable(n, isDate) {
  // … your existing declarations …
  var table = document.getElementById('{{tableid}}');
  var rows = table.tBodies[0].rows;
  var startIndex = 0;
  var endIndex = rows.length - 1;
  var switching = true;
  var dir = 'asc';
  var switchcount = 0;

  resetSortArrows();

  // ───────────────────────────────────────────────────────────────
  // 1) RESET *ALL* HEADER BUTTONS TO “NOT SORTED”
  //    (put this right after you clear your visual arrows)
  // ───────────────────────────────────────────────────────────────
  document
    .querySelectorAll('.govuk-table__header button')
    .forEach(btn => {
      const name = btn.textContent.trim();
      btn.setAttribute('aria-sort', 'none');
      btn.setAttribute(
        'aria-label',
        `${name}, not sorted. Activate to sort ascending.`
      );
    });
  // ───────────────────────────────────────────────────────────────

  while (switching) {
    switching = false;
    for (var i = startIndex; i < endIndex; i++) {
      var shouldSwitch = false;
      var x = rows[i].getElementsByTagName('td')[n];
      var y = rows[i+1].getElementsByTagName('td')[n];

      if (dir === 'asc') {
        // ───────────────────────────────────────────────────────────
        // 2a) UPDATE THE *CLICKED* HEADER BUTTON FOR ASCENDING
        // ───────────────────────────────────────────────────────────
        const btnAsc = document
          .querySelectorAll('.govuk-table__header button')[n];
        const colNameAsc = btnAsc.textContent.trim();
        btnAsc.setAttribute('aria-sort', 'ascending');
        btnAsc.setAttribute(
          'aria-label',
          `${colNameAsc}, sorted ascending. Activate to sort descending.`
        );
        // ───────────────────────────────────────────────────────────

        if (isDate) {
          if (new Date(x.innerText) > new Date(y.innerText)) {
            shouldSwitch = true;
            break;
          }
        } else {
          if (x.innerText.toLowerCase() > y.innerText.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }

      } else if (dir === 'desc') {
        // ───────────────────────────────────────────────────────────
        // 2b) UPDATE THE *CLICKED* HEADER BUTTON FOR DESCENDING
        // ───────────────────────────────────────────────────────────
        const btnDesc = document
          .querySelectorAll('.govuk-table__header button')[n];
        const colNameDesc = btnDesc.textContent.trim();
        btnDesc.setAttribute('aria-sort', 'descending');
        btnDesc.setAttribute(
          'aria-label',
          `${colNameDesc}, sorted descending. Activate to sort ascending.`
        );
        // ───────────────────────────────────────────────────────────

        if (isDate) {
          if (new Date(x.innerText) < new Date(y.innerText)) {
            shouldSwitch = true;
            break;
          }
        } else {
          if (x.innerText.toLowerCase() < y.innerText.toLowerCase()) {
            shouldSwitch = true;
            break;
          }
        }
      }

      if (shouldSwitch) {
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
      }
    }

    if (switchcount == 0 && dir === 'asc') {
      dir = 'desc';
      switching = true;
    }
  }

  // … your existing pagination / display logic …
}
