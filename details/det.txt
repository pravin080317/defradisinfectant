Title:
Portal Environment Cleanup â€“ Removal of Redundant Templates and Components (Dev to Prod)

Description:
The LA Portal environments (Dev, FAT, PPE, Prod) contain redundant or obsolete components including web templates, site markers, site pages, web files, and unused portal configurations. This task is to carry out a thorough analysis and cleanup of these unnecessary items to streamline the portal structure, improve maintainability, and reduce clutter across environments.

Scope of Work:
Analyze and identify unused or redundant:

Web templates

Site markers

Web files (HTML/JS/CSS)

Site pages

Portal forms and lists

Content snippets

Validate with key stakeholders to ensure no active dependencies exist before removal.

Implement cleanup in Dev environment first and follow with FAT, PPE, and Prod after review and approval.

Ensure portal functionality and user journeys remain unaffected post-cleanup.

Document items removed and their previous usage in the technical runbook.





Title: Setup Dashboard for Portal Error and Log Analysis (Front Door + Power Pages)

Description:
To improve operational monitoring and streamline issue resolution, we need to set up a dashboard for analyzing logs and errors generated by both the front door and Power Pages applications.

Scope:
Front Door (Node.js Backend)

Utilize existing Azure Application Insights telemetry for the front door logs and exceptions.

Create a dashboard in Azure Portal using Workbooks or App Insights Analytics to visualize key metrics (e.g., failed requests, dependencies, custom events).

Power Pages (Dataverse logs)

Capture relevant portal errors or telemetry into Dataverse custom tables (if not already available).

Create Power BI dashboards sourcing Dataverse data to monitor errors, exceptions, or abnormal patterns.

Unified Approach

Option A: Maintain two separate dashboards (one in Azure for the backend and one in Power BI for Power Pages/Dataverse).

Option B: Create a single unified Power BI dashboard pulling both Dataverse logs and Azure App Insights data via Azure Data Lake or REST API connector.

Integrate Power BI dashboard within the model-driven app (admin portal) as an embedded report for easy access by business users and technical teams.

Acceptance Criteria:
A dashboard is available in Azure for backend logs (App Insights).

A Power BI dashboard is available for Power Pages logs via Dataverse.

Optionally, a unified Power BI dashboard integrating both Azure and Dataverse telemetry.

Documentation of the data pipeline and access controls.

Priority: Medium

Dependencies:

Azure Application Insights for Front Door.

Dataverse logging from Power Pages.

Power BI license and embedding setup.






Title: Enhance LA Portal Model-Driven App for Internal Users and Support Developers

Description:
The existing LA Portal model-driven app requires enhancement to better support internal users and development/support teams. The enhancements will improve navigation, monitoring, and interaction with key data entities.

Scope:
Table Enhancements

Review and update existing Dataverse tables (e.g., Portal File Management, Submissions, Errors).

Create additional columns or relationships if needed (e.g., Support Notes, Audit Fields).

Form Customization

Customize main forms for key tables to surface required fields for internal users (e.g., status updates, troubleshooting data).

Optimize forms for usability, removing unused fields and sections.

Sitemap Updates

Reorganize sitemap to clearly categorize key entities for internal support and development teams.

Create separate areas for Operations, Monitoring, and Configuration if needed.

Dashboard Setup

Create dashboards within the app to provide insights (e.g., file upload statuses, failed submissions, common errors).

Integrate Power BI dashboards or views (e.g., via Power BI embedding) if applicable.

Security Roles & Access Control

Review and define appropriate security roles for internal users and developers.

Restrict or expose areas based on role (e.g., support agents, technical admins).

Acceptance Criteria:
Updated forms and tables are available and aligned with support/developer needs.

Sitemap structure is reorganized for ease of navigation.

Dashboards are created and integrated to track operational metrics.

Security roles are reviewed and configured.

Priority: High
Dependencies:

Existing LA Portal Model-Driven App

Dataverse Schema

Power BI workspace (if embedding dashboard)

Security role review with stakeholders











Epic:
Implement NDR Section for LA Portal Power Pages (Same as Council Tax)

Story 1:
Title: Analyze Draft NDR Module and Assess Completion Status

Description: Conduct a detailed review of the existing draft work for the NDR section in the LA Portal Power Pages. This involves:

Identifying features already developed (multiple upload, single report, fix errors, submitted reports).

Comparing existing draft work with the functionality available in the Council Tax section.

Documenting gaps and outstanding development activities needed for completion.

Engage with relevant stakeholders to validate the current status and gather further requirements if necessary.

Acceptance Criteria:

Assessment of current NDR draft completed.

Gaps documented and aligned with Council Tax functionality.

Action plan created for remaining development tasks.

Story 2:
Title: Implement Core Features for NDR Section (Multiple Uploads, Single Report, Fix Errors, Submitted Reports)

Description: Develop the NDR section in LA Portal Power Pages to replicate the functionality of the Council Tax section, including:

Multiple Uploads feature

Single Report journey

Fix Errors screen

Submitted Reports list

Portal user journey and validation flows matching Council Tax standards

Acceptance Criteria:

All four core features implemented for NDR.

End-to-end user journey completed and aligned with Council Tax process.

UAT feedback incorporated and solution ready for testing.

Story 3:
Title: Validate NDR Module Data Integration and Back-End Sync

Description: Ensure NDR module integrates seamlessly with:

Back-end Dataverse tables.

Front Door and file upload mechanisms.

Error handling and submission flows as per Council Tax module.

Acceptance Criteria:

Data correctly saved in Dataverse as per NDR schema.

File uploads processed via Front Door and handled by bulk submission logic.

Fix Errors and Submitted Reports workflows function correctly.










Current Retention and Archival Process Overview:
1. Dataverse Layer:

Currently, when a user deletes a file, the file entry in Dataverse is not hard deleted or deactivated.

Instead, a soft delete is performed by updating the status field to "Deleted".

The system does not have an automated cleanup job yet to purge or archive the soft-deleted records from Dataverse after X days.

2. Azure Blob Storage Layer:

The bulk upload files are initially processed by a Front Door-triggered Azure Function which reads and extracts data.

Once processed, the file is moved to a secondary container (e.g., "DoNotUse" container).

The file remains in this secondary container indefinitely unless explicitly removed via a separate API call to Azure Blob Storage (e.g., via a custom Azure Function to delete blobs).

No current retention logic exists for automated deletion from Blob Storage based on soft-delete flags from Dataverse.

3. SharePoint Layer:

Files that are related to evidences (e.g., for single reports) are moved to SharePoint.

However, there is no integrated logic to delete these SharePoint files when their associated Dataverse records are marked as "Deleted".

SharePoint cleanup is currently manual or pending further automation logic.

4. Bulk Submission & Evidence Flow:

Bulk submissions: After file processing, bulk data is extracted into Dataverse tables such as "Front Door Header" and "Front Door Rows."

Even after the file is marked as "Deleted" in Dataverse, these downstream records (header & rows) are left untouched.

Evidence documents uploaded as part of single report journeys also follow a similar soft-delete logic where files are retained post deletion in SharePoint and Blob.

Observed Gaps:
No automated archival or hard deletion pipeline across Dataverse, Blob, and SharePoint.

No unified retention policy across all storage components.

Manual intervention required to clean up redundant or stale files.



Title:
Analyze and Design Retention & Archival Process for LA Portal Files across Dataverse, Azure Blob & SharePoint

Description:
The current LA Portal file management process retains deleted records and files across multiple systems (Dataverse, Azure Blob Storage, and SharePoint) without an automated cleanup or archival process. When a file is marked as "Deleted" in Dataverse, it remains present in Azure Blob secondary containers (e.g., DoNotUse) and SharePoint libraries.

This story is to perform an in-depth analysis and design a retention & archival process that will:

Define retention period based on business agreement (e.g., 30/60/90 days) for soft-deleted files.

Implement scheduled or event-driven jobs to remove or archive data from:

Dataverse (bulk submission records, evidence records, soft-deleted records).

Azure Blob containers (deletion of blobs post-retention window).

SharePoint document libraries (deletion or archival of evidence documents).

Ensure cascade deletion for related Front Door Header & Row records in Dataverse for bulk uploads.

Evaluate automation using Azure Functions and Dataverse plugins for orchestration.

This task will deliver:

Detailed process design.

System impact analysis.

Dependencies and recommendations for implementation.

Acceptance Criteria:

Business retention period for file deletion is confirmed and documented.

Retention and archival approach is proposed across all 3 layers (Dataverse, Blob, SharePoint).

Identification of automation tools (e.g., Azure Functions, Power Automate).

Technical design document capturing the end-to-end process.

Analysis of risks and edge cases (e.g., partial deletions, legacy records).

Linked Items:

Related to file management & compliance backlog items

Dependency: Business approval from Emma and team on retention period.
