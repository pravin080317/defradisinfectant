let isCouncilSwitching = false;

function selectAccount(event) {
  event.preventDefault();

  if (isCouncilSwitching) return; // prevent double trigger
  isCouncilSwitching = true;

  const account = event.target.closest('[data-council-id]');
  const newCouncilId = account.getAttribute("data-council-id");
  const newCouncilName = account.innerText?.trim();
  const prevCouncilId = sessionStorage.getItem("activeCouncilId");

  updateNewActiveAccount(newCouncilId)
    .then(() => {
      if (newCouncilId && newCouncilId !== prevCouncilId) {
        sessionStorage.setItem("activeCouncilId", newCouncilId);
        sessionStorage.setItem("activeCouncilName", newCouncilName);

        try {
          if (window.appInsights && typeof window.appInsights.trackEvent === "function") {
            window.appInsights.trackEvent({
              name: "CouncilSwitched",
              properties: {
                userId: "{{ user.id | default: 'Anonymous' }}",
                userName: "{{ user.fullname | default: 'N/A' }}",
                previousCouncilId: prevCouncilId || "Unknown",
                newCouncilId: newCouncilId,
                newCouncilName: newCouncilName,
                userCouncil: newCouncilName,
                switchTime: new Date().toISOString(),
                sessionId: sessionStorage.getItem("customSessionId") || ""
              }
            });
          }
        } catch (err) {
          console.error("App Insights tracking failed for Multi User:", err);
        }
      }

      // âœ… Only redirect once
      newAccountPage();
    })
    .catch(function (error) {
      console.error("Error updating council:", error);
    })
    .finally(() => {
      isCouncilSwitching = false;
    });
}