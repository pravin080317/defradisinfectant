Absolutely, here‚Äôs a **precise, focused fix** for the `locationDetailsVal()` function based on your accessibility improvements (UPRN, X and Y fields). We‚Äôll **only modify what's required** to:

- Add missing `aria-invalid` attributes
- Trigger/hide error messages visually and programmatically
- Match GOV.UK error styling and accessibility practices

---

### ‚úÖ **Required Fixes (Simple Replacements)**

Replace your validation logic **inside `locationDetailsVal()`** with the **correct error toggle code** for each field:

---

#### ‚úÖ **Fix 1: UPRN Validation Block**

**üîÅ Replace:**
```js
if ($("#$(obj.inputs[0].id)").val() && UPRN_REGEX.test($("#${obj.inputs[0].id)').val()) === false) {
    obj.inputs[0].isValid = false;
} else {
    obj.inputs[0].isValid = true;
}
```

**‚úÖ With:**
```js
const uprnInput = document.getElementById(obj.inputs[0].id);
if (uprnInput.value && !UPRN_REGEX.test(uprnInput.value)) {
    obj.inputs[0].isValid = false;
    uprnInput.setAttribute('aria-invalid', 'true');
    document.getElementById(`${obj.inputs[0].id}-error`).style.display = "block";
    document.getElementById(`${obj.inputs[0].id}-form-group`).classList.add("govuk-form-group--error");
} else {
    obj.inputs[0].isValid = true;
    uprnInput.removeAttribute('aria-invalid');
    document.getElementById(`${obj.inputs[0].id}-error`).style.display = "none";
    document.getElementById(`${obj.inputs[0].id}-form-group`).classList.remove("govuk-form-group--error");
}
```

---

#### ‚úÖ **Fix 2: X (Eastings) Validation Block**

**üîÅ Replace:**
```js
if ($('#$(obj.inputs[1].id)').val() && GRID_REGEX.test($('#$(obj.inputs[1].id)").val()) === false) {
    obj.inputs[1].isValid = false;
} else {
    obj.inputs[1].isValid = true;
}
```

**‚úÖ With:**
```js
const xInput = document.getElementById(obj.inputs[1].id);
if (xInput.value && !GRID_REGEX.test(xInput.value)) {
    obj.inputs[1].isValid = false;
    xInput.setAttribute('aria-invalid', 'true');
    document.getElementById(`${obj.inputs[1].id}-error`).style.display = "block";
    document.getElementById(`${obj.inputs[1].id}-form-group`).classList.add("govuk-form-group--error");
} else {
    obj.inputs[1].isValid = true;
    xInput.removeAttribute('aria-invalid');
    document.getElementById(`${obj.inputs[1].id}-error`).style.display = "none";
    document.getElementById(`${obj.inputs[1].id}-form-group`).classList.remove("govuk-form-group--error");
}
```

---

#### ‚úÖ **Fix 3: Y (Northings) Validation Block**

**üîÅ Replace:**
```js
if ($("#${obj.inputs [2].id)").val() && GRID_REGEX.test($('#$(obj.inputs[2].id}').val()) === false) {
    obj.inputs[2].isValid = false;
} else {
    obj.inputs[2].isValid = true;
}
```

**‚úÖ With:**
```js
const yInput = document.getElementById(obj.inputs[2].id);
if (yInput.value && !GRID_REGEX.test(yInput.value)) {
    obj.inputs[2].isValid = false;
    yInput.setAttribute('aria-invalid', 'true');
    document.getElementById(`${obj.inputs[2].id}-error`).style.display = "block";
    document.getElementById(`${obj.inputs[2].id}-form-group`).classList.add("govuk-form-group--error");
} else {
    obj.inputs[2].isValid = true;
    yInput.removeAttribute('aria-invalid');
    document.getElementById(`${obj.inputs[2].id}-error`).style.display = "none";
    document.getElementById(`${obj.inputs[2].id}-form-group`).classList.remove("govuk-form-group--error");
}
```

---

### ‚úÖ Where to Replace:

Inside `function locationDetailsVal()` ‚Äî only replace the 3 individual field validation blocks as shown above. Keep your loop and `updateRecord()` logic untouched.

Let me know if you'd like me to drop this as a full block or integrate it into the version you're working on.
