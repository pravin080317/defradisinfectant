To verify that your custom `LAPortalLogin` event and custom session tracking are working in **Application Insights**, use the following **Kusto Query Language (KQL)** queries in the Logs tab:

---

### ✅ **1. Check if `LAPortalLogin` event is captured correctly**

```kql
customEvents
| where name == "LAPortalLogin"
| project timestamp, name, user_Id, session_Id = tostring(customDimensions.sessionId),
          userName = tostring(customDimensions.userName),
          userStatus = tostring(customDimensions.userStatus),
          council = tostring(customDimensions.userCouncil),
          loginTime = tostring(customDimensions.loginTime)
| order by timestamp desc
```

---

### ✅ **2. Count of unique user IDs per day**

```kql
customEvents
| where name == "LAPortalLogin"
| summarize UniqueUsers = dcount(tostring(customDimensions.userId)) by bin(timestamp, 1d)
| order by timestamp desc
```

---

### ✅ **3. Find duplicate login events per user in the same session (to debug double-counting)**

```kql
customEvents
| where name == "LAPortalLogin"
| summarize Count = count() by userId = tostring(customDimensions.userId), sessionId = tostring(customDimensions.sessionId), bin(timestamp, 30m)
| where Count > 1
| order by timestamp desc
```

---

### ✅ **4. Concurrent users estimate (based on login and session TTL = 30 mins)**

This estimates concurrent usage by checking how many users were "active" in overlapping 5-minute bins:

```kql
customEvents
| where name == "LAPortalLogin"
| extend loginTime = todatetime(customDimensions.loginTime)
| extend activeWindow = range(bin(loginTime, 5m), loginTime + 30m, 5m)
| mv-expand activeWindow to typeof(datetime)
| summarize ConcurrentUsers = dcount(tostring(customDimensions.userId)) by activeWindow
| order by activeWindow
```

---

### ✅ **5. Validate session ID consistency across page views and login**

```kql
union customEvents, pageViews
| where name == "LAPortalLogin" or name == "Page view"
| extend sessionId = tostring(customDimensions.sessionId)
| summarize Events = count() by sessionId, userId = tostring(customDimensions.userId)
| where Events > 1
| order by Events desc
```

---

Let me know if you want a **Power BI report** based on these queries or an **alert rule** to flag abnormal login counts.
