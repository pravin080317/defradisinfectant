Runbook: LPI Address Lookup Plugin for VOA Property Records
Overview
The LPI Address Lookup Plugin is a Microsoft Dataverse plugin designed to fetch Local Property Identifier (LPI) address details using a postcode-based search. This plugin communicates with the VOA Gazetteer API, enabling users to retrieve structured property address data dynamically via PowerApps Portals.

The plugin ensures secure API authentication, structured data transformation, and dynamic storage within Dataverse Virtual Tables. The retrieved address records are not persisted, making this an on-demand lookup solution that enhances real-time address searches.

Execution Workflow
1. Plugin Invocation
The plugin is triggered when a user or system process queries an address using an LPI Postcode via PowerApps Portals.
The execution context is validated to ensure it is not null. If the context is missing, execution is halted by throwing an ArgumentNullException.
2. Retrieve API Credentials
The plugin retrieves VOA API credentials securely from voa_CredentialProvider.
The credentials retrieved include:
API Base Address
Client ID & Client Secret
Subscription Key
Scope & Tenant ID
These credentials ensure secure API communication.
3. Generate Authentication Token
The plugin generates an OAuth2 authentication token using the retrieved credentials.
The token is used to authenticate the API request.
4. Construct & Send API Request
A GET request is made to the VOA Gazetteer API, querying the LPI Postcode.
The API request is structured as follows:
perl
Copy
Edit
https://voagw.npd.hmrc.gov.uk/dev/internal/bst/gazetteer/ordnanceSurvey/geocode/findAddressCandidates?
f=json&maxLocations=100&outSR=%7B%22wkid%22%3A27700%7D&outFields=*&singleLine={LPI_Postcode}
The request includes authentication headers:
Bearer <AccessToken>
Ocp-Apim-Subscription-Key
5. Process API Response
The API returns a list of address candidates matching the requested postcode.
The plugin parses the response and extracts structured address details.
6. Transform & Store Data in Dataverse
The API response is converted into a structured entity format.
The Dataverse Virtual Table (voap_lpiaddresslookup) is dynamically updated.
The formatted address results are returned to PowerApps Portals for display.
7. Response Handling
If an address is found, it is converted, stored, and displayed.
If no address is found, the plugin logs the failure.
If the API request fails, the failure is logged and execution continues.
API Used
The plugin interacts with the VOA Gazetteer API, which provides postcode-based address geolocation services.

API Endpoint:

ruby
Copy
Edit
https://voagw.npd.hmrc.gov.uk/dev/internal/bst/gazetteer/ordnanceSurvey/geocode/findAddressCandidates
API Parameters:

f=json → JSON response format
maxLocations=100 → Maximum number of address candidates
outSR=%7B%22wkid%22%3A27700%7D → Spatial reference (Ordnance Survey)
singleLine={LPI_Postcode} → The postcode query parameter
Dataverse Virtual Table Used
Virtual Table Name	Description	Operation
voap_lpiaddresslookup	Temporarily stores retrieved LPI address details.	Insert/Update
Purpose & Functionality
Acts as a bridge between Dataverse and the VOA API, enabling real-time address retrieval.
No data persistence—records are retrieved dynamically and are not stored permanently.
Optimized for PowerApps Portals, ensuring fast response times.
Structured response handling, mapping API responses to Dataverse fields.
Data Fields Stored in voap_lpiaddresslookup
Column Name	Description
voap_lpipostcode	The postcode used for the address lookup.
voap_lpiaddressstring	The formatted address retrieved from the API.
voap_lpiuprn	The Unique Property Reference Number (UPRN).
voap_lpiusrn	The Unique Street Reference Number (USRN).
voap_lpitownname	The town name where the property is located.
voap_lpilocalityname	The locality name of the property.
voap_lpiadministrativearea	The administrative area assigned to the property.
voap_lpixcoordinate	The X-coordinate (Easting) of the property.
voap_lpiycoordinate	The Y-coordinate (Northing) of the property.
Logging & Trace Details
The plugin logs execution steps, API interactions, and results using Dataverse TracingService.

Example Trace Log Output
css
Copy
Edit
[+732ms] Entered VOA.Plugins.Plugins.CustomAPI.voa_AddressLabelSearch.Execute()
[+63ms] Generating authentication
[+219ms] Returning token object
[+16ms] Making request to VOA Gazetteer API
[+2,838ms] Address Retrieved: "CAR PARKING SPACE 1, ARODENE HOUSE, PERTH ROAD, GANTS HILL, ILFORD, IG2 6FL"
[+606ms] QueryExp voap_lpiaddresslookup
[+3,277ms] Request stored
[+8ms] Key Result is found in the response
[+63ms] Address converted
[+8ms] Response sent to portal
These logs provide critical debugging information and allow for quick issue resolution in case of failures.

Deployment & Maintenance
Configuration Requirements
Ensure the Virtual Table (voap_lpiaddresslookup) is correctly configured in Dataverse.
API credentials should be securely stored in voa_CredentialProvider.
PowerApps Portals should be configured to fetch real-time data from the virtual table.
Verify that API response fields are correctly mapped to Dataverse attributes.
Routine Maintenance Checklist
✔ Monitor API availability to prevent disruptions in address lookups.
✔ Verify API credentials periodically to avoid authentication failures.
✔ Check PowerApps Portals integration to ensure accurate data retrieval.
✔ Analyze Dataverse logs for performance improvements and debugging.

Conclusion
The LPI Address Lookup Plugin is a real-time address search solution that integrates Dataverse Virtual Tables with VOA Gazetteer API. It eliminates the need for data persistence, ensuring fast, secure, and accurate address lookups within PowerApps Portals.

By leveraging OAuth2 authentication, structured logging, and dynamic entity updates, this plugin enhances user experience while maintaining high-performance standards. Proper configuration, API monitoring, and error handling are essential to maintain seamless operation across integrated services.
