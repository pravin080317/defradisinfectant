function errorValidation() {
  clearErrorSummary();
  let hasErrors = false;

  for (const input of obj.inputs) {
    if (!input.id) continue;

    const inputId = input.id;
    const message = input.errorMessage || "There is a problem with this field";
    const insertBeforeSelector = input.insertBefore || (input.radio ? ".govuk-radios" : undefined);

    if (input.isValid === false) {
      showErrorMessage(inputId, message, insertBeforeSelector);
      addErrorToSummary(inputId, message);
      hasErrors = true;
    } else {
      clearErrorMessage(inputId);
    }
  }

  toggleErrorSummary(hasErrors);
}


function reasonCodeVal() {
  scrollToTop();
  let reasonSelected = document.querySelector("input[name='report-reason']:checked");

  clearErrorSummary();

  if (!reasonSelected) {
    // Show inline and summary error using helpers
    showErrorMessage("report-reason", "Select a reason for creating the report", ".govuk-radios");
    addErrorToSummary("report-reason", "Select a reason for creating the report");
    toggleErrorSummary(true);
    return;
  } else {
    clearErrorMessage("report-reason");
    toggleErrorSummary(false);
    createRecord(nextPage, dataObject);
    return;
  }
}
