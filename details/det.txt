Are they following a standard tech stack?
Yes. The LA Portal adheres to a standard and supportable tech stack within the Microsoft ecosystem and UK government digital service guidelines:

Frontend:

HTML, CSS, and JavaScript are used for customizing Power Pages.

Gov.UK Design System components are integrated for consistent, accessible UI.

Backend:

Dataverse is used for data management and process orchestration.

Plugins and custom connectors are built using C# for server-side logic.

Azure Functions are used for background processing, validation, and data handling.

Describe the development tool chain that you have selected
Power Platform CLI and Azure DevOps for CI/CD automation.

Visual Studio for plugin and Azure Function development (C#).

VS Code and Power Pages Designer for HTML, JS, and Liquid customizations.

Power Platform Build Tools for Azure DevOps to manage ALM (Application Lifecycle Management).

Application Insights and Azure Monitor for logging and diagnostics.

How will you know if the service is healthy?
Yes, service health is actively monitored:

Application Insights is integrated into Azure Functions and plugins for real-time telemetry.

Azure Monitor and Power Platform Admin Center are used to track system events, usage metrics, and potential failures.

Alerts are configured for exception patterns, latency, failed submissions, and unexpected downtime.

Periodic reviews are performed via dashboards and custom logs.

How easy is it to rebuild the service, if necessary?
High Rebuild Readiness:

Infrastructure as Code (IaC): Azure resources are provisioned via ARM templates or Bicep.

Source Control: All code (plugins, functions, JS, Liquid templates) is version-controlled in Azure Repos.

Power Platform Solutions: All customizations are packaged into managed/unmanaged solutions, supporting clean environment rebuilds.

CI/CD Pipelines ensure consistent deployments with environment-specific configurations, enabling rapid restoration or cloning of environments.
