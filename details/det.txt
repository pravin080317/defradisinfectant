Got it ðŸ™‚ â€” you want a **single SQL query** that:

* Starts from **PortalFileManagement** â†’ links with **PortalRequest**
* Shows **PortalRequest status** + **PortalFileManagement status**
* Includes **council info**, **logged-in user**, and file details
* Checks if the file has **FrontDoorRow records**
* If FrontDoorRow exists â†’ fetches any associated **FrontDoorError** (`voa_error`)
* Uses the actual column names from the schema you shared earlier.

Hereâ€™s the **complete query** based on your Dataverse schema:

---

## **Final SQL Query**

```sql
SELECT
    -- File Management Details
    pfm.voap_portalfilemanagementid        AS PortalFileManagementId,
    pfm.voap_filename                      AS FileName,
    pfm.voap_filenameoriginal             AS OriginalFileName,
    pfm.statuscodename                   AS PortalFileStatus,
    pfm.createdon                        AS FileCreatedOn,
    pfm.createdbyname                    AS UploadedBy,
    pfm.voap_loggedinuser                AS LoggedInUser,
    pfm.voap_relatedbillingauthorityname AS CouncilName,      -- âœ… Correct column
    pfm.voap_bacode                      AS BACode,
    pfm.voap_accountname                 AS AccountName,

    -- Portal Request Details
    pr.voap_portalrequestid              AS PortalRequestId,
    pr.voap_name                         AS PortalRequestName,
    pr.statuscodename                   AS PortalRequestStatus,
    pr.voap_billingauthorityreferencenumber AS CouncilReference,

    -- FrontDoor Processing Info
    fdr.voa_frontdoorrowid              AS FrontDoorRowId,
    fdr.statuscodename                 AS FrontDoorRowStatus,

    -- FrontDoor Error Details
    fde.voa_frontdoorerrorid           AS FrontDoorErrorId,
    fde.voa_error                      AS FrontDoorErrorCode,
    fde.voa_description               AS FrontDoorErrorDescription

FROM dbo.voap_portalfilemanagement pfm

-- Link Portal File Management â†’ Portal Request
LEFT JOIN dbo.voap_portalrequest pr
    ON pr.voap_portalrequestid = pfm.voap_portalrequestlookup

-- Link Portal File Management â†’ FrontDoorRow (via PortalRequest)
LEFT JOIN dbo.voa_frontdoorrow fdr
    ON fdr.voa_portalrequestid = pr.voap_portalrequestid

-- Link FrontDoorRow â†’ FrontDoorError
LEFT JOIN dbo.voa_frontdoorerror fde
    ON fde.voa_frontdoorrowid = fdr.voa_frontdoorrowid

-- Filter optional if needed: only look at files created in the last 30 days
-- WHERE pfm.createdon >= DATEADD(DAY, -30, GETDATE())

ORDER BY pfm.createdon DESC;
```

---

## **How This Query Works**

| **Entity**                     | **Purpose**                         | **Key Columns Used**                                   |
| ------------------------------ | ----------------------------------- | ------------------------------------------------------ |
| **voap\_portalfilemanagement** | Stores uploaded files & status info | `voap_filename`, `statuscodename`, `voap_loggedinuser` |
| **voap\_portalrequest**        | Tracks request linked to file       | `voap_portalrequestid`, `statuscodename`               |
| **voa\_frontdoorrow**          | Stores processing status per record | `voa_frontdoorrowid`, `statuscodename`                 |
| **voa\_frontdoorerror**        | Logs errors for frontdoor rows      | `voa_error`, `voa_description`                         |

---

## **Output Highlights**

* Shows **file details**: name, status, created date, logged-in user.
* Includes **council details** and **BACode**.
* Fetches **PortalRequest info**: name, status, council reference.
* If **FrontDoorRow** exists â†’ shows processing status.
* If **FrontDoorError** exists â†’ displays the exact error code + description.

---

If you want, I can **enhance this further** to:

1. Only fetch **records stuck** in `Processing` / `Processing Error` / `New`.
2. Show **total rows processed vs failed** per file by joining **FrontDoorHeader**.
3. Highlight cases where the **file is uploaded** but **FrontDoor hasnâ€™t picked it up**.

Do you want me to prepare that **enhanced debugging query** next?
Itâ€™ll give you a **complete 360Â° view** of file â†’ request â†’ frontdoor â†’ errors.
