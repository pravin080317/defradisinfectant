// 4. Track login event once across tabs using localStorage with 30-min TTL
(function() {
    const loginKey = "LAPortalLoginTracked";
    const loginTTL = 30 * 60 * 1000; // 30 mins
    const now = Date.now();

    try {
        const tracked = JSON.parse(localStorage.getItem(loginKey) || "{}");
        if (!tracked.timestamp || (now - tracked.timestamp) > loginTTL) {
            appInsights.trackEvent({
                name: "LAPortalLogin",
                properties: {
                    type: window.Microsoft?.Dynamic365?.Portal?.type || "PowerPages",
                    userId: "{{ user.id | default: 'Anonymous' }}",
                    userName: "{{ user.fullname | default: 'N/A' }}",
                    status: "{{ user ? 'LoggedIn' : 'Guest' }}",
                    council: "{{ user.voap_contact_ActiveAccount_account.voa_baccodeacc | default: 'Unknown'}}",
                    loginTime: new Date().toISOString()
                }
            });
            localStorage.setItem(loginKey, JSON.stringify({ timestamp: now }));
        }
    } catch (e) {
        console.error("Login event tracking failed:", e);
    }
})();

// 5. Track page view once every 15 mins per page
(function() {
    const currentPageKey = "hasSentPageView_" + window.location.pathname;
    const sessionTTL = 15 * 60 * 1000; // 15 minutes
    const now = Date.now();

    try {
        const existing = JSON.parse(sessionStorage.getItem(currentPageKey) || "{}");
        if (!existing.timestamp || (now - existing.timestamp) > sessionTTL) {
            appInsights.trackPageView({ name: document.title });
            sessionStorage.setItem(currentPageKey, JSON.stringify({ timestamp: now }));
        }
    } catch (e) {
        console.error("Page view tracking failed:", e);
    }
})();
