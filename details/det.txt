Runbook: PG Hereditament Lookup Plugin for VOA Property Records
Overview
The PG Hereditament Lookup Plugin is a Microsoft Dataverse plugin that retrieves property hereditament details from an external API based on the Billing Authority Code (BA Code) and Billing Authority Reference (BA Reference). This plugin is triggered in the Dataverse Plugin Execution Context and interacts with the VOA (Valuation Office Agency) API to fetch property details dynamically.

The plugin validates input parameters, authenticates API requests using OAuth2, processes API responses, and updates Dataverse virtual tables. It ensures secure credential storage, robust logging, and structured error handling, making it a critical component in property data retrieval workflows.

Execution Workflow
The plugin is executed when a user or system process queries hereditament records. It first validates the execution context to ensure it is not null. If the context is missing, execution is halted by throwing an ArgumentNullException.

Once validated, the plugin retrieves execution context details, including:

PluginExecutionContext – Provides metadata about the execution.
TracingService – Enables logging for debugging and monitoring.
OrganizationService – Facilitates interaction with Dataverse Virtual Tables.
The plugin then extracts query parameters, including:

BA Code (pgbacode)
BA Reference (pgbareference)
If either parameter is missing, an error response is generated and logged using the TracingService.

Authentication & API Request
After validating the input parameters, the plugin retrieves API credentials using a custom action (voa_CredentialProvider). These credentials include:

API Base Address
Client ID & Client Secret
Subscription Key
Scope & Tenant ID
The plugin generates an OAuth2 authentication token to authorize API requests securely. Once authenticated, it constructs an HTTP GET request to fetch hereditament details, using the following request format:

bash
Copy
Edit
{API Address}/bacode/{BillingAuthorityCode}/baref/{BillingAuthorityReference}
The request headers include:

Authorization Header (Bearer <AccessToken>)
Subscription Key (Ocp-Apim-Subscription-Key)
Once the request is sent, the plugin logs the request URL, response status, and error messages for debugging.

API Used
The plugin interacts with the VOA Property API hosted at:

ruby
Copy
Edit
https://voagw.npd.hmrc.gov.uk/dev/internal/bst/property-app/v1.1/statutorySpatialUnitLabel
This API is responsible for retrieving property details such as:

Property Address
Building Number
Postcode
Locality & Town Name
Coordinates (X, Y)
UPRN (Unique Property Reference Number)
USRN (Unique Street Reference Number)
Handling API Responses
After receiving a response from the VOA API, the plugin processes the returned data and handles different response scenarios:

200 OK (Successful Response)

The API returns valid hereditament details.
The plugin parses and extracts property data from the response.
Data is stored in Dataverse Virtual Tables and logged for reference.
404 Not Found or 204 No Content (No Records Found)

The API does not return any hereditament details for the given BA Code and BA Reference.
The plugin logs a "No Results Found" message.
A structured response is sent back indicating no available data.
500 Internal Server Error or Other HTTP Errors (400, 403, etc.)

The API request fails due to server-side issues or incorrect parameters.
The plugin logs the status code and API error message.
A failure response is returned to notify the user/system.
If any execution failure occurs within the plugin, it is logged under a general plugin failure category for further troubleshooting.

Dataverse Virtual Tables Used
The plugin interacts with Dataverse Virtual Tables to fetch and store hereditament details dynamically. The key virtual tables involved are:

Table Name	Description	Operation
voap_pghereditamentlookup	Stores retrieved hereditament details.	Insert/Update
voap_credentialstore	Stores API credentials securely.	Read Only
voap_requestlog	Logs API request and response details.	Insert
voap_errorlog	Captures errors encountered during execution.	Insert
The voap_pghereditamentlookup table is updated with retrieved hereditament data, while the voap_requestlog table logs each API request made by the plugin. If errors occur, they are logged in voap_errorlog to facilitate debugging.

Where Credentials Are Stored
The plugin retrieves securely stored API credentials from the Dataverse Secure Configuration via the voa_CredentialProvider custom action. This ensures that sensitive details like Client ID, Client Secret, and Subscription Key are not exposed in plaintext.

The stored credentials are accessed dynamically during runtime, ensuring that API requests remain secure and compliant with best practices.

Logging & Trace Details
The plugin uses Dataverse TracingService to log execution details, including:

Query Parameters
BA Code & BA Reference used in the request.
Authentication & API Calls
OAuth2 token generation process.
API request details (URL, headers, parameters).
API Response Handling
Received property data.
Error messages, if applicable.
Virtual Table Updates
Data written to voap_pghereditamentlookup.
Example Trace Log Output
css
Copy
Edit
[+47ms] QE Filters voap_pgbacode Values 8116
[+0ms] QE Filters voap_pgbareference Values 14855023007
[+1,601ms] Attempting to retrieve secret values from voa Credential Provider action
[+4,483ms] Request made to: https://voagw.npd.hmrc.gov.uk/dev/internal/bst/property-app/v1.1/statutorySpatialUnitLabel/bacode/8116/baref/14855023007
[+8ms] Status Code: OK Reason: OK
[+95ms] Returned Addresses:
{"addressString": "23 HUNGERFORD GARDENS, BRISTOL, BS4 5HA"}
[+0ms] Finished generating entities.
Error Handling & Common Scenarios
The plugin incorporates structured error handling to manage execution failures effectively.

Error Code	Description	Resolution
Err01	Missing BA Code in request.	Validate request parameters.
Err02	Missing BA Reference in request.	Ensure BA Reference is provided.
Err03	API Call Failed.	Check API availability and credentials.
Err04	Authentication Failure.	Validate stored credentials and OAuth flow.
Err05	Plugin Execution Failure.	Check logs for further troubleshooting.
Deployment & Maintenance
To ensure smooth execution, the plugin should be configured correctly in Dataverse and linked to appropriate entity triggers. The VOA Credential Provider custom action should be set up to return the correct credentials securely. Additionally, the API should be accessible and operational at all times.

Routine Maintenance Checklist
Monitor Tracing Logs for execution errors.
Verify API Credentials periodically to prevent authentication failures.
Test API Connectivity after deployments or infrastructure updates.
Review Dataverse Virtual Tables to ensure data integrity and update accuracy.
If failures occur:

Check the Tracing Logs to identify root causes.
Validate API availability using manual test calls.
Ensure OAuth2 authentication is working correctly.
Confirm Dataverse Virtual Tables are correctly mapped and accessible.
Conclusion
The PG Hereditament Lookup Plugin is a key component for retrieving property hereditament details via the VOA Property API. With secure authentication, structured API handling, and detailed logging, this plugin provides a scalable and reliable solution for property record retrieval. Proper configuration, monitoring, and maintenance are essential to ensure continuous operation.
